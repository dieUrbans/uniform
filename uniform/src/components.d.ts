/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface WButton {
    }
    interface WCol {
    }
    interface WInput {
        "border": string;
        "disabled": boolean;
        "errorMsg": string;
        "label": string;
        "max": number;
        "min": number;
        "readonly": boolean;
        "required": boolean;
        "setFocus": boolean;
        "success": boolean;
        "type": string;
        "validate": Function;
        "value": string;
        "warning": boolean;
    }
    interface WModal {
        "closeModal": (name: string) => Promise<void>;
        "closeOnClick": boolean;
        "name": string;
        "showModal": (name: string) => Promise<void>;
    }
    interface WRow {
    }
    interface WTextarea {
    }
}
declare global {
    interface HTMLWButtonElement extends Components.WButton, HTMLStencilElement {
    }
    var HTMLWButtonElement: {
        prototype: HTMLWButtonElement;
        new (): HTMLWButtonElement;
    };
    interface HTMLWColElement extends Components.WCol, HTMLStencilElement {
    }
    var HTMLWColElement: {
        prototype: HTMLWColElement;
        new (): HTMLWColElement;
    };
    interface HTMLWInputElement extends Components.WInput, HTMLStencilElement {
    }
    var HTMLWInputElement: {
        prototype: HTMLWInputElement;
        new (): HTMLWInputElement;
    };
    interface HTMLWModalElement extends Components.WModal, HTMLStencilElement {
    }
    var HTMLWModalElement: {
        prototype: HTMLWModalElement;
        new (): HTMLWModalElement;
    };
    interface HTMLWRowElement extends Components.WRow, HTMLStencilElement {
    }
    var HTMLWRowElement: {
        prototype: HTMLWRowElement;
        new (): HTMLWRowElement;
    };
    interface HTMLWTextareaElement extends Components.WTextarea, HTMLStencilElement {
    }
    var HTMLWTextareaElement: {
        prototype: HTMLWTextareaElement;
        new (): HTMLWTextareaElement;
    };
    interface HTMLElementTagNameMap {
        "w-button": HTMLWButtonElement;
        "w-col": HTMLWColElement;
        "w-input": HTMLWInputElement;
        "w-modal": HTMLWModalElement;
        "w-row": HTMLWRowElement;
        "w-textarea": HTMLWTextareaElement;
    }
}
declare namespace LocalJSX {
    interface WButton {
    }
    interface WCol {
    }
    interface WInput {
        "border"?: string;
        "disabled"?: boolean;
        "errorMsg"?: string;
        "label"?: string;
        "max"?: number;
        "min"?: number;
        "onChanged"?: (event: CustomEvent<any>) => void;
        "readonly"?: boolean;
        "required"?: boolean;
        "setFocus"?: boolean;
        "success"?: boolean;
        "type"?: string;
        "validate"?: Function;
        "value"?: string;
        "warning"?: boolean;
    }
    interface WModal {
        "closeOnClick"?: boolean;
        "name"?: string;
        "onBeforeOpen"?: (event: CustomEvent<any>) => void;
    }
    interface WRow {
    }
    interface WTextarea {
    }
    interface IntrinsicElements {
        "w-button": WButton;
        "w-col": WCol;
        "w-input": WInput;
        "w-modal": WModal;
        "w-row": WRow;
        "w-textarea": WTextarea;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "w-button": LocalJSX.WButton & JSXBase.HTMLAttributes<HTMLWButtonElement>;
            "w-col": LocalJSX.WCol & JSXBase.HTMLAttributes<HTMLWColElement>;
            "w-input": LocalJSX.WInput & JSXBase.HTMLAttributes<HTMLWInputElement>;
            "w-modal": LocalJSX.WModal & JSXBase.HTMLAttributes<HTMLWModalElement>;
            "w-row": LocalJSX.WRow & JSXBase.HTMLAttributes<HTMLWRowElement>;
            "w-textarea": LocalJSX.WTextarea & JSXBase.HTMLAttributes<HTMLWTextareaElement>;
        }
    }
}
